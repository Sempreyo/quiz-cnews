{"version":3,"sources":["main.js"],"names":["document","addEventListener","quiz","querySelector","quizFieldsWrapper","querySelectorAll","buttonNext","error","stepCount","forEach","wrapper","toggleFields","reset","el","e","currentTarget","checked","i","arr","parentElement","classList","toggle","contains","isShowed","remove","fields","getAttribute","value","stepActive","checkNothing","selectedValuesCopy","isValid","preventDefault","input","nextElementSibling","add","setTimeout","textContent","checkbox","insertAdjacentHTML","closest","dataset","name","type","setAttribute","data","step","selectedFields","selectedNames","arrCount","field","push","indexOf","index","values","innerField","join","length","$","ajax","url","window","location","JSON","parse","complete","response","textStatus","status","responseText"],"mappings":"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","file":"../main.min.js","sourcesContent":["/* Common */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst quiz = document.querySelector(\".quiz\");\r\n\r\n\tif (quiz) {\r\n\t\tconst quizFieldsWrapper = quiz.querySelectorAll(\".quiz__fields\");\r\n\t\tconst buttonNext = quiz.querySelector(\".quiz__next\");\r\n\t\tconst error = quiz.querySelector(\".quiz__error\");\r\n\t\tlet stepCount = 1;\r\n\r\n\t\tquizFieldsWrapper.forEach((wrapper) => {\r\n\t\t\tconst toggleFields = wrapper.querySelectorAll(\".js-toggle-field .field__label\");\r\n\t\t\tconst reset = quiz.querySelector(\".js-reset-fields input\");\r\n\t\t\tconst checkFields = wrapper.querySelectorAll('.field:not(.js-reset-fields) input[type=\"checkbox\"]');\r\n\r\n\t\t\tcheckFields.forEach((el) => {\r\n\t\t\t\tel.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\ttoggleFields.forEach((el, i, arr) => {\r\n\t\t\t\tel.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.currentTarget.parentElement.classList.toggle(\"active\");\r\n\r\n\t\t\t\t\tif (e.currentTarget.parentElement.classList.contains(\"active\")) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 1) {\r\n\t\t\t\t\t\tlet isShowed = false;\r\n\r\n\t\t\t\t\t\tif (!isShowed && arr[i + 1]) {\r\n\t\t\t\t\t\t\tarr[i + 1].parentElement.classList.remove(\"closed\");\r\n\t\t\t\t\t\t\tisShowed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (reset) {\r\n\t\t\t\treset.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tconst fields = quiz.querySelectorAll(\".quiz__step--3 .field:not(.js-reset-fields) input\");\r\n\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\tfields.forEach((el) => {\r\n\t\t\t\t\t\t\tif (el.getAttribute(\"type\") === \"text\") {\r\n\t\t\t\t\t\t\t\tel.value = \"\";\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tel.checked = false;\r\n\t\t\t\t\t\t\tel.parentElement.classList.remove(\"active\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbuttonNext.addEventListener(\"click\", (e) => {\r\n\t\t\tconst stepActive = quiz.querySelector(\".quiz__step.open\");\r\n\t\t\tconst checkNothing = quiz.querySelectorAll(\".js-check-nothing\");\r\n\t\t\tconst selectedValues = quiz.querySelectorAll(\".quiz__step--2 .field:not(.js-reset-fields) input, .quiz__step--3 .field:not(.js-reset-fields) input\");\r\n\t\t\tconst selectedValuesCopy = quiz.querySelectorAll(\".quiz__step--3 .field:not(.js-reset-fields) input\");\r\n\t\t\tlet isValid = false;\r\n\r\n\t\t\tif (stepCount < 11) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif (stepCount < 12) {\r\n\t\t\t\t/* Проверяем, заполнено ли хотя бы одно значение на каждом шаге, если нет - показываем ошибку, если все норм, пускаем дальше */\r\n\t\t\t\tif (stepCount > 1) {\r\n\t\t\t\t\tconst selectedValuesStep = quizFieldsWrapper[stepCount - 2].querySelectorAll(\".field input\");\r\n\r\n\t\t\t\t\tselectedValuesStep.forEach((input) => {\r\n\t\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value !== \"\") || stepCount < 2 || stepCount > 3) {\r\n\t\t\t\t\t\t\tisValid = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isValid) {\r\n\t\t\t\t\t\tstepActive.classList.remove(\"open\");\r\n\t\t\t\t\t\tstepActive.nextElementSibling.classList.add(\"open\");\r\n\t\t\t\t\t\tstepCount++;\r\n\t\t\t\t\t\terror.classList.add(\"d-none\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terror.classList.remove(\"d-none\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstepActive.classList.remove(\"open\");\r\n\t\t\t\t\tstepActive.nextElementSibling.classList.add(\"open\");\r\n\t\t\t\t\tstepCount++;\r\n\r\n\t\t\t\t\t/* Если есть скрытый заголовок, делаем ему анимированное появление */\r\n\t\t\t\t\tif (stepActive.nextElementSibling.querySelector(\".hidden\")) {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tstepActive.nextElementSibling.querySelector(\".hidden\").classList.remove(\"hidden\");\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tswitch (stepCount) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tbuttonNext.textContent = \"Вперед\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbuttonNext.textContent = \"Больше не знаю\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tbuttonNext.textContent = \"Вперед\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tselectedValuesCopy.forEach((input) => {\r\n\t\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value != \"\")) {\r\n\t\t\t\t\t\t\t/* Перед каждым последним чекбоксом вставляем выбранные на предыдущих шагах */\r\n\t\t\t\t\t\t\tcheckNothing.forEach((checkbox) => {\r\n\t\t\t\t\t\t\t\tcheckbox.insertAdjacentHTML(\"beforebegin\", `<label class=\"field field--checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input class=\"field__input\" type=\"checkbox\" name=\"${checkbox.closest(\".quiz__step\").dataset.name}\" value=\"${input.value}\" data-value=\"${input.value}\" /><span class=\"field__label\">${input.type === \"checkbox\" ? input.parentElement.querySelector(\".field__label\").textContent : input.value}</span><b></b>\r\n\t\t\t\t\t\t\t\t</label>`);\r\n\r\n\t\t\t\t\t\t\t\t/* Если был клик по последнему полю, все предыдущие сбрасываются */\r\n\t\t\t\t\t\t\t\tcheckbox.querySelector(\"input\").addEventListener(\"change\", (e) => {\r\n\t\t\t\t\t\t\t\t\tconst fields = e.currentTarget.closest(\".quiz__step\").querySelectorAll(\".field:not(.js-check-nothing) input\");\r\n\r\n\t\t\t\t\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\t\t\t\t\tfields.forEach((el) => {\r\n\t\t\t\t\t\t\t\t\t\t\tel.checked = false;\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t/* Если был клик по любому полю кроме последнего, последний сбрасывается */\r\n\t\t\t\t\t\t\t\tcheckbox.parentElement.querySelectorAll(\".field:not(.js-check-nothing) input\").forEach((input) => {\r\n\t\t\t\t\t\t\t\t\tinput.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckbox.querySelector(\"input\").checked = false;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tbuttonNext.setAttribute(\"type\", \"submit\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tquiz.addEventListener(\"submit\", (e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\tlet data = '{\"form\":{';\r\n\r\n\t\t\t\t\t\tfor (let step = 2; step < 12; step++) {\r\n\t\t\t\t\t\t\tconst fields = quiz.querySelectorAll(`.quiz__step--${step} .field input`);\r\n\t\t\t\t\t\t\tlet selectedFields = [];\r\n\t\t\t\t\t\t\tlet selectedNames = [];\r\n\t\t\t\t\t\t\tlet arrCount = 0;\r\n\r\n\t\t\t\t\t\t\t/* Формируем массив выбранных полей на каждом шаге */\r\n\t\t\t\t\t\t\tfields.forEach((field) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tfield.getAttribute(\"type\") === \"checkbox\" &&\r\n\t\t\t\t\t\t\t\t\tfield.checked ||\r\n\t\t\t\t\t\t\t\t\tfield.getAttribute(\"type\") === \"text\"\r\n\t\t\t\t\t\t\t\t\t&& field.value !== \"\"\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tselectedFields.push(field);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* Формируем json */\r\n\t\t\t\t\t\t\tdata += `\"step${step}\": {`;\r\n\r\n\t\t\t\t\t\t\t/* Проверяем количество массивов на каждом шаге */\r\n\t\t\t\t\t\t\tselectedFields.forEach((field) => {\r\n\t\t\t\t\t\t\t\tif (selectedNames.indexOf(field.getAttribute(\"name\")) == -1) {\r\n\t\t\t\t\t\t\t\t\tselectedNames.push(field.getAttribute(\"name\"));\r\n\t\t\t\t\t\t\t\t\tarrCount++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tselectedNames = [];\r\n\r\n\t\t\t\t\t\t\t/* Формируем вложенную структуру */\r\n\t\t\t\t\t\t\tselectedFields.forEach((field, index, arr) => {\r\n\t\t\t\t\t\t\t\t/* Если выбрано несколько полей с одинаковым name, достаем только один name */\r\n\t\t\t\t\t\t\t\tif (selectedNames.indexOf(field.getAttribute(\"name\")) == -1) {\r\n\t\t\t\t\t\t\t\t\tlet values = [];\r\n\r\n\t\t\t\t\t\t\t\t\tselectedNames.push(field.getAttribute(\"name\"));\r\n\r\n\t\t\t\t\t\t\t\t\tdata += `\"${field.getAttribute(\"name\")}\": [`;\r\n\r\n\t\t\t\t\t\t\t\t\tarr.forEach((innerField) => {\r\n\t\t\t\t\t\t\t\t\t\tif (innerField.getAttribute(\"name\") == field.getAttribute(\"name\")) {\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.push(`\"${innerField.value}\"`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tdata += `${values.join(\",\")}`;\r\n\r\n\t\t\t\t\t\t\t\t\tdata += `]${arrCount > 1 && index !== selectedFields.length - 1 ? \",\" : \"\"}`;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tdata += (step === 11) ? '}' : '},';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata += '}}';\r\n\r\n\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\ttype: \"POST\",\r\n\t\t\t\t\t\t\turl: window.location,\r\n\t\t\t\t\t\t\tdata: JSON.parse(data),\r\n\t\t\t\t\t\t\tcomplete: function (response, textStatus) {\r\n\t\t\t\t\t\t\t\tif (response.status === 200 && response.responseText) {\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbuttonNext.classList.add(\"d-none\");\r\n\r\n\t\t\t\t\t/* Если есть скрытый заголовок, делаем ему анимированное появление */\r\n\t\t\t\t\tif (stepActive.nextElementSibling.querySelector(\".hidden\")) {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tstepActive.nextElementSibling.querySelector(\".hidden\").classList.remove(\"hidden\");\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});"]}