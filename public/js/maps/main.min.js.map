{"version":3,"sources":["main.js"],"names":["document","addEventListener","quiz","querySelector","quizFieldsWrapper","querySelectorAll","buttonNext","error","stepCount","forEach","wrapper","toggleFields","reset","checkFields","textFields","el","e","currentTarget","checked","i","arr","parentElement","classList","toggle","isShowed","remove","fields","value","stepActive","checkNothing","selectedValues","preventDefault","selectedValuesStep","console","log","input","getAttribute","nextElementSibling","add","textContent","checkbox","insertAdjacentHTML","setAttribute","formData","FormData","fetch","method","body","then","response","catch","setTimeout"],"mappings":"AACAA,SAAAC,iBAAA,mBAAA,KACA,MAAAC,EAAAF,SAAAG,cAAA,SAEA,GAAAD,EAAA,CACA,MAAAE,EAAAF,EAAAG,iBAAA,iBACAC,EAAAJ,EAAAC,cAAA,eACAI,EAAAL,EAAAC,cAAA,gBACA,IAAAK,EAAA,EAEAJ,EAAAK,QAAAC,IACA,MAAAC,EAAAD,EAAAL,iBAAA,kCACAO,EAAAV,EAAAC,cAAA,0BACAU,EAAAH,EAAAL,iBAAA,uDACAS,EAAAJ,EAAAL,iBAAA,mDAEAQ,EAAAJ,QAAAM,IACAA,EAAAd,iBAAA,SAAAe,IACAA,EAAAC,cAAAC,UACAN,EAAAM,SAAA,OAKAJ,EAAAL,QAAAM,IACAA,EAAAd,iBAAA,SAAAe,IACAA,EAAAC,cAAAC,UACAN,EAAAM,SAAA,OAKAP,EAAAF,QAAA,CAAAM,EAAAI,EAAAC,KACAL,EAAAd,iBAAA,QAAAe,IAGA,GAFAA,EAAAC,cAAAI,cAAAC,UAAAC,OAAA,UAEAJ,EAAA,EAAA,CACA,IAAAK,GAAA,EAEAA,IACAJ,EAAAD,EAAA,GAAAE,cAAAC,UAAAG,OAAA,UACAD,GAAA,QAMAZ,GACAA,EAAAX,iBAAA,SAAAe,IACA,MAAAU,EAAAhB,EAAAL,iBAAA,sCAEAW,EAAAC,cAAAC,SACAQ,EAAAjB,QAAAM,IACAA,EAAAY,MAAA,GACAZ,EAAAG,SAAA,EACAH,EAAAM,cAAAC,UAAAG,OAAA,gBAOAnB,EAAAL,iBAAA,QAAAe,IACA,MAAAY,EAAA1B,EAAAC,cAAA,oBACA0B,EAAA3B,EAAAG,iBAAA,qBACAyB,EAAA5B,EAAAG,iBAAA,sCAMA,GAJAG,EAAA,IACAQ,EAAAe,iBAGAvB,EAAA,GAAA,CAEA,MAAAwB,EAAA5B,EAAAI,EAAA,GAAAH,iBAAA,gBAEA4B,QAAAC,IAAAF,GAEAA,EAAAvB,QAAA0B,IACAA,EAAAjB,SAAA,SAAAiB,EAAAC,aAAA,SAAA,KAAAD,EAAAR,OACAM,QAAAC,IAAA,2BACAN,EAAAN,UAAAG,OAAA,QACAG,EAAAS,mBAAAf,UAAAgB,IAAA,QACA9B,IACAD,EAAAe,UAAAgB,IAAA,YAEA/B,EAAAe,UAAAG,OAAA,UACAQ,QAAAC,IAAA,qBAKA,OAAA1B,GACA,KAAA,EACAF,EAAAiC,YAAA,SAEAT,EAAArB,QAAA0B,KACAA,EAAAjB,SAAA,SAAAiB,EAAAC,aAAA,SAAA,IAAAD,EAAAR,QAEAE,EAAApB,QAAA+B,IACAA,EAAAC,mBAAA,cAAA,4GACAN,EAAAC,aAAA,yCAAAD,EAAAR,mDAKA,MACA,KAAA,GACArB,EAAAoC,aAAA,OAAA,UACA,MACA,KAAA,GACAxC,EAAAD,iBAAA,SAAAe,IACAA,EAAAe,iBAEA,MAAAY,EAAA,IAAAC,SAAA1C,GAEA2C,MAAA,eAAA,CACAC,OAAA,OACAC,KAAAJ,IAEAK,KAAAC,IACAhB,QAAAC,IAAAe,KAEAC,MAAA3C,IACA0B,QAAA1B,MAAAA,KAEAD,EAAAgB,UAAAgB,IAAA,YAIAa,WAAA,KACAjD,EAAAoB,UAAAgB,IAAA,WACA","file":"../main.min.js","sourcesContent":["/* Common */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst quiz = document.querySelector(\".quiz\");\r\n\r\n\tif (quiz) {\r\n\t\tconst quizFieldsWrapper = quiz.querySelectorAll(\".quiz__fields\");\r\n\t\tconst buttonNext = quiz.querySelector(\".quiz__next\");\r\n\t\tconst error = quiz.querySelector(\".quiz__error\");\r\n\t\tlet stepCount = 1;\r\n\r\n\t\tquizFieldsWrapper.forEach((wrapper) => {\r\n\t\t\tconst toggleFields = wrapper.querySelectorAll(\".js-toggle-field .field__label\");\r\n\t\t\tconst reset = quiz.querySelector(\".js-reset-fields input\");\r\n\t\t\tconst checkFields = wrapper.querySelectorAll('.field:not(.js-reset-fields) input[type=\"checkbox\"]');\r\n\t\t\tconst textFields = wrapper.querySelectorAll('.field:not(.js-reset-fields) input[type=\"text\"]');\r\n\r\n\t\t\tcheckFields.forEach((el) => {\r\n\t\t\t\tel.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\ttextFields.forEach((el) => {\r\n\t\t\t\tel.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\ttoggleFields.forEach((el, i, arr) => {\r\n\t\t\t\tel.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.currentTarget.parentElement.classList.toggle(\"active\");\r\n\r\n\t\t\t\t\tif (i > 1) {\r\n\t\t\t\t\t\tlet isShowed = false;\r\n\r\n\t\t\t\t\t\tif (!isShowed) {\r\n\t\t\t\t\t\t\tarr[i+1].parentElement.classList.remove(\"closed\");\r\n\t\t\t\t\t\t\tisShowed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (reset) {\r\n\t\t\t\treset.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tconst fields = wrapper.querySelectorAll(\".field:not(.js-reset-fields) input\");\r\n\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\tfields.forEach((el) => {\r\n\t\t\t\t\t\t\tel.value = \"\";\r\n\t\t\t\t\t\t\tel.checked = false;\r\n\t\t\t\t\t\t\tel.parentElement.classList.remove(\"active\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbuttonNext.addEventListener(\"click\", (e) => {\r\n\t\t\tconst stepActive = quiz.querySelector(\".quiz__step.open\");\r\n\t\t\tconst checkNothing = quiz.querySelectorAll(\".js-check-nothing\");\r\n\t\t\tconst selectedValues = quiz.querySelectorAll(\".field:not(.js-reset-fields) input\");\r\n\r\n\t\t\tif (stepCount < 10) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif (stepCount < 11) {\r\n\t\t\t\t/* Проверяем, заполнено ли хотя бы одно значение на каждом шаге, если нет - показываем ошибку, если все норм, пускаем дальше */\r\n\t\t\t\tconst selectedValuesStep = quizFieldsWrapper[stepCount - 1].querySelectorAll(\".field input\");\r\n\r\n\t\t\t\tconsole.log(selectedValuesStep)\r\n\r\n\t\t\t\tselectedValuesStep.forEach((input) => {\r\n\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value !== \"\")) {\r\n\t\t\t\t\t\tconsole.log(\"Поля выбраны, го дальше\")\r\n\t\t\t\t\t\tstepActive.classList.remove(\"open\");\r\n\t\t\t\t\t\tstepActive.nextElementSibling.classList.add(\"open\");\r\n\t\t\t\t\t\tstepCount++;\r\n\t\t\t\t\t\terror.classList.add(\"d-none\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terror.classList.remove(\"d-none\");\r\n\t\t\t\t\t\tconsole.log(\"Выберите поле!\")\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tswitch (stepCount) {\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbuttonNext.textContent = \"Вперед\";\r\n\r\n\t\t\t\t\tselectedValues.forEach((input) => {\r\n\t\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value != \"\")) {\r\n\t\t\t\t\t\t\t/* Перед каждым последним чекбоксом вставляем выбранные на предыдущих шагах */\r\n\t\t\t\t\t\t\tcheckNothing.forEach((checkbox) => {\r\n\t\t\t\t\t\t\t\tcheckbox.insertAdjacentHTML(\"beforebegin\", `<label class=\"field field--checkbox\">\r\n\t\t\t\t\t\t\t\t<input class=\"field__input\" type=\"checkbox\" name=\"${input.getAttribute(\"name\")}\" /><span class=\"field__label\">${input.value}</span><b></b>\r\n\t\t\t\t\t\t\t</label>`);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tbuttonNext.setAttribute(\"type\", \"submit\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tquiz.addEventListener(\"submit\", (e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\tconst formData = new FormData(quiz);\r\n\r\n\t\t\t\t\t\tfetch(\"path-to-ajax\", {\r\n\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\tbody: formData,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbuttonNext.classList.add(\"d-none\");\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* На последнем сообщении скрываем форму после 3 секунд */\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tquiz.classList.add(\"d-none\");\r\n\t\t\t\t\t}, 3000);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});"]}