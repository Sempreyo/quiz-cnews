{"version":3,"sources":["main.js"],"names":["document","addEventListener","quiz","querySelector","quizFieldsWrapper","querySelectorAll","buttonNext","error","stepCount","forEach","wrapper","toggleFields","reset","checkFields","textFields","el","e","currentTarget","checked","i","arr","parentElement","classList","toggle","isShowed","remove","fields","value","stepActive","checkNothing","selectedValues","isValid","preventDefault","input","getAttribute","nextElementSibling","add","setTimeout","textContent","checkbox","insertAdjacentHTML","closest","dataset","name","type","setAttribute","arrMass","data","step","x","console","log","arrIndex","arrMemory","length","push","flag","ind","indexOf","join","startsWith","$","ajax","url","window","location","JSON","parse","complete","response","textStatus","status","responseText"],"mappings":"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","file":"../main.min.js","sourcesContent":["/* Common */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst quiz = document.querySelector(\".quiz\");\r\n\r\n\tif (quiz) {\r\n\t\tconst quizFieldsWrapper = quiz.querySelectorAll(\".quiz__fields\");\r\n\t\tconst buttonNext = quiz.querySelector(\".quiz__next\");\r\n\t\tconst error = quiz.querySelector(\".quiz__error\");\r\n\t\tlet stepCount = 1;\r\n\r\n\t\tquizFieldsWrapper.forEach((wrapper) => {\r\n\t\t\tconst toggleFields = wrapper.querySelectorAll(\".js-toggle-field .field__label\");\r\n\t\t\tconst reset = quiz.querySelector(\".js-reset-fields input\");\r\n\t\t\tconst checkFields = wrapper.querySelectorAll('.field:not(.js-reset-fields) input[type=\"checkbox\"]');\r\n\t\t\tconst textFields = wrapper.querySelectorAll('.field:not(.js-reset-fields) input[type=\"text\"]');\r\n\r\n\t\t\tcheckFields.forEach((el) => {\r\n\t\t\t\tel.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\ttextFields.forEach((el) => {\r\n\t\t\t\tel.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\treset.checked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\ttoggleFields.forEach((el, i, arr) => {\r\n\t\t\t\tel.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.currentTarget.parentElement.classList.toggle(\"active\");\r\n\r\n\t\t\t\t\tif (i > 1) {\r\n\t\t\t\t\t\tlet isShowed = false;\r\n\r\n\t\t\t\t\t\tif (!isShowed) {\r\n\t\t\t\t\t\t\tarr[i+1].parentElement.classList.remove(\"closed\");\r\n\t\t\t\t\t\t\tisShowed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (reset) {\r\n\t\t\t\treset.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tconst fields = quiz.querySelectorAll(\".quiz__step--4 .field:not(.js-reset-fields) input\");\r\n\r\n\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\tfields.forEach((el) => {\r\n\t\t\t\t\t\t\tel.value = \"\";\r\n\t\t\t\t\t\t\tel.checked = false;\r\n\t\t\t\t\t\t\tel.parentElement.classList.remove(\"active\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbuttonNext.addEventListener(\"click\", (e) => {\r\n\t\t\tconst stepActive = quiz.querySelector(\".quiz__step.open\");\r\n\t\t\tconst checkNothing = quiz.querySelectorAll(\".js-check-nothing\");\r\n\t\t\tconst selectedValues = quiz.querySelectorAll(\".quiz__step--3 .field:not(.js-reset-fields) input, .quiz__step--4 .field:not(.js-reset-fields) input\");\r\n\t\t\tlet isValid = false;\r\n\r\n\t\t\tif (stepCount < 12) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif (stepCount < 13) {\r\n\t\t\t\t/* Проверяем, заполнено ли хотя бы одно значение на каждом шаге, если нет - показываем ошибку, если все норм, пускаем дальше */\r\n\t\t\t\tif (stepCount > 2) {\r\n\t\t\t\t\tconst selectedValuesStep = quizFieldsWrapper[stepCount - 3].querySelectorAll(\".field input\");\r\n\r\n\t\t\t\t\tselectedValuesStep.forEach((input) => {\r\n\t\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value !== \"\") || stepCount < 3 || stepCount > 4) {\r\n\t\t\t\t\t\t\tisValid = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isValid) {\r\n\t\t\t\t\t\tstepActive.classList.remove(\"open\");\r\n\t\t\t\t\t\tstepActive.nextElementSibling.classList.add(\"open\");\r\n\t\t\t\t\t\tstepCount++;\r\n\t\t\t\t\t\terror.classList.add(\"d-none\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terror.classList.remove(\"d-none\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstepActive.classList.remove(\"open\");\r\n\t\t\t\t\tstepActive.nextElementSibling.classList.add(\"open\");\r\n\t\t\t\t\tstepCount++;\r\n\r\n\t\t\t\t\t/* Если есть скрытый заголовок, делаем ему анимированное появление */\r\n\t\t\t\t\tif (stepActive.nextElementSibling.querySelector(\".hidden\")) {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tstepActive.nextElementSibling.querySelector(\".hidden\").classList.remove(\"hidden\");\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tswitch (stepCount) {\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbuttonNext.textContent = \"Вперед\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tbuttonNext.textContent = \"Больше не знаю\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tbuttonNext.textContent = \"Вперед\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tselectedValues.forEach((input) => {\r\n\t\t\t\t\t\tif (input.checked || (input.getAttribute(\"type\") === \"text\" && input.value != \"\")) {\r\n\t\t\t\t\t\t\t/* Перед каждым последним чекбоксом вставляем выбранные на предыдущих шагах */\r\n\t\t\t\t\t\t\tcheckNothing.forEach((checkbox) => {\r\n\t\t\t\t\t\t\t\tcheckbox.insertAdjacentHTML(\"beforebegin\", `<label class=\"field field--checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input class=\"field__input\" type=\"checkbox\" name=\"${checkbox.closest(\".quiz__step\").dataset.name}\" value=\"${input.value}\" data-value=\"${input.value}\" /><span class=\"field__label\">${input.type === \"checkbox\" ? input.parentElement.querySelector(\".field__label\").textContent : input.value}</span><b></b>\r\n\t\t\t\t\t\t\t\t</label>`);\r\n\r\n\t\t\t\t\t\t\t\t/* Если был клик по последнему полю, все предыдущие сбрасываются */\r\n\t\t\t\t\t\t\t\tcheckbox.querySelector(\"input\").addEventListener(\"change\", (e) => {\r\n\t\t\t\t\t\t\t\t\tconst fields = e.currentTarget.closest(\".quiz__step\").querySelectorAll(\".field:not(.js-check-nothing) input\");\r\n\r\n\t\t\t\t\t\t\t\t\tif (e.currentTarget.checked) {\r\n\t\t\t\t\t\t\t\t\t\tfields.forEach((el) => {\r\n\t\t\t\t\t\t\t\t\t\t\tel.value = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\tel.checked = false;\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t/* Если был клик по любому полю кроме последнего, последний сбрасывается */\r\n\t\t\t\t\t\t\t\tcheckbox.parentElement.querySelectorAll(\".field:not(.js-check-nothing) input\").forEach((input) => {\r\n\t\t\t\t\t\t\t\t\tinput.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckbox.querySelector(\"input\").checked = false;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tbuttonNext.setAttribute(\"type\", \"submit\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tquiz.addEventListener(\"submit\", (e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\tlet arrMass = [];\r\n\t\t\t\t\t\tlet data = `{\"form\":{`;\r\n\r\n\t\t\t\t\t\tfor (let step = 3; step < 13; step++) {\r\n\t\t\t\t\t\t\tconst fields = quiz.querySelectorAll(`.quiz__step--${step} .field input`);\r\n\r\n\t\t\t\t\t\t\tfields.forEach((x) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"name \" + x.getAttribute(\"name\"))\r\n\t\t\t\t\t\t\t\tconsole.log(\"value \" + x.value)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\tdata += `\"step${step}\": {`;\r\n\t\t\t\t\t\t\tarrMass = [];\r\n\t\t\t\t\t\t\tarrIndex = [];\r\n\t\t\t\t\t\t\tarrMemory = [];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\t\t\t\t\t\tif (fields[i].value != '') {\r\n\t\t\t\t\t\t\t\t\tarrMass.push('\"' + fields[i].value + '\"');\r\n\t\t\t\t\t\t\t\t\tarrIndex.push(fields[i].getAttribute(\"name\"));\r\n\t\t\t\t\t\t\t\t\tconsole.log('Filled' + fields[i].value);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Empty' + fields[i].value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\t\t\tlet flag = 0;\r\n\t\t\t\t\t\t\t//let isEmpty = true;\r\n\t\t\t\t\t\t\tfor (let name = 0; name < fields.length; name++) {\r\n\t\t\t\t\t\t\t\tif ((fields[name].getAttribute(\"type\") === \"checkbox\" && fields[name].checked) || (fields[name].getAttribute(\"type\") === \"text\" && fields[name].value!= \"\")) {\r\n\t\t\t\t\t\t\t\t\twhile (arrIndex.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tlet ind = arrIndex.indexOf(fields[name].getAttribute(\"name\"));\r\n\t\t\t\t\t\t\t\t\t\tif (ind != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\tarrMemory.push(arrMass[ind]);\r\n\t\t\t\t\t\t\t\t\t\t\tdelete arrIndex[ind];// = 'deleted';\r\n\t\t\t\t\t\t\t\t\t\t\tdelete arrMass[ind];// = 'deleted';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (arr.indexOf(fields[name].getAttribute(\"name\")) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tarr.push(fields[name].getAttribute(\"name\"));\r\n\t\t\t\t\t\t\t\t\t\tdata += fields[name].getAttribute(\"name\") + ': ';\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\tflag = 1;\r\n\t\t\t\t\t\t\t\t\t\t//isEmpty = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (name == fields[fields.length - 1] || flag == 1) {\r\n\t\t\t\t\t\t\t\t\t\tarrMemory = [];\r\n\t\t\t\t\t\t\t\t\t\tdata += '[' + arrMemory.join(\",\") + ']';\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (flag == 1 && name != fields[fields.length - 1]) {\r\n\t\t\t\t\t\t\t\t\t\t\tdata += ',';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tarrMass = [];\r\n\t\t\t\t\t\t\t\t\t\tflag = 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (fields[name].getAttribute(\"name\") != \"rus-company\") {\r\n\t\t\t\t\t\t\t\t\t\t// data += `\"${fields[name].value}\"`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tfields[name].getAttribute(\"name\").startsWith(\"company-\") && \r\n\t\t\t\t\t\t\t\t\t\tfields[name+1].getAttribute(\"name\").startsWith(\"company-\")\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t//data += \"]\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// if (step > 3) {\r\n\t\t\t\t\t\t\t\t\t// \tdata += \",\";\r\n\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t// \tif (\r\n\t\t\t\t\t\t\t\t\t// \t\tstep == 3 && \r\n\t\t\t\t\t\t\t\t\t// \t\tfields[name].getAttribute(\"name\").startsWith(\"company-\") && \r\n\t\t\t\t\t\t\t\t\t// \t\tname !== arrChecked.length - 1\r\n\t\t\t\t\t\t\t\t\t// \t) {\r\n\t\t\t\t\t\t\t\t\t// \t\tdata += \",\";\r\n\t\t\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t\t// if(fields[name+1])\r\n\t\t\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t\t\t// \tdata += `\r\n\t\t\t\t\t\t\t\t\t// \t\"${fields[name].value || fields[name].dataset.value}\"\r\n\t\t\t\t\t\t\t\t\t// \t${fields[name].getAttribute(\"name\").startsWith(\"company-\") && fields[name+1].getAttribute(\"name\").startsWith(\"company-\") ? \"]\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t// \t${step > 3 ? \",\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t// \t${step == 3 && fields[name].getAttribute(\"name\").startsWith(\"company-\") && name !== arrChecked.length - 1 ? \",\" : \"\"}`;\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// else\r\n\t\t\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t\t\t// \tdata += `\r\n\t\t\t\t\t\t\t\t\t// \t\"${fields[name].value || fields[name].dataset.value}\"\r\n\t\t\t\t\t\t\t\t\t// \t${fields[name].getAttribute(\"name\").startsWith(\"company-\") && fields[name+1].getAttribute(\"name\").startsWith(\"company-\") ? \"]\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t// \t${step > 3 ? \"\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t// \t${step == 3 && fields[name].getAttribute(\"name\").startsWith(\"company-\") && name !== arrChecked.length - 1 ? \"\" : \"\"}`;\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//data += fields[name].getAttribute(\"name\") + ': [' + arrMass.join(\",\") + ']';\r\n\r\n\t\t\t\t\t\t\t// if (isEmpty || step === 3) {\r\n\t\t\t\t\t\t\t// \tdata += ``;\r\n\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t// \tdata += `[]]`;\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\tdata += (step === 12) ? '}' : '},';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata += '}}';\r\n\r\n\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\r\n\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\ttype: \"POST\",\r\n\t\t\t\t\t\t\turl: window.location,\r\n\t\t\t\t\t\t\tdata: JSON.parse(data),\r\n\t\t\t\t\t\t\tcomplete: function(response, textStatus) {\r\n\t\t\t\t\t\t\t\tif (response.status === 200 && response.responseText) {}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbuttonNext.classList.add(\"d-none\");\r\n\r\n\t\t\t\t\t/* Если есть скрытый заголовок, делаем ему анимированное появление */\r\n\t\t\t\t\tif (stepActive.nextElementSibling.querySelector(\".hidden\")) {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tstepActive.nextElementSibling.querySelector(\".hidden\").classList.remove(\"hidden\");\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});"]}